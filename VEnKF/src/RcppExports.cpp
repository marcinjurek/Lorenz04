// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// DeltaLorenz04M2Cpp
arma::colvec DeltaLorenz04M2Cpp(const arma::colvec X0, const int& F_Lor, const int& K, const double& dt, const int& M, const int& order);
RcppExport SEXP _VEnKF_DeltaLorenz04M2Cpp(SEXP X0SEXP, SEXP F_LorSEXP, SEXP KSEXP, SEXP dtSEXP, SEXP MSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< const int& >::type F_Lor(F_LorSEXP);
    Rcpp::traits::input_parameter< const int& >::type K(KSEXP);
    Rcpp::traits::input_parameter< const double& >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const int& >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(DeltaLorenz04M2Cpp(X0, F_Lor, K, dt, M, order));
    return rcpp_result_gen;
END_RCPP
}
// Lorenz04M2SimCpp
arma::mat Lorenz04M2SimCpp(const arma::colvec& Xinit, const int& F_Lor, const int& K_Lor, const double& dt, const int& M, const int& iter, const int& burn, const int& order);
RcppExport SEXP _VEnKF_Lorenz04M2SimCpp(SEXP XinitSEXP, SEXP F_LorSEXP, SEXP K_LorSEXP, SEXP dtSEXP, SEXP MSEXP, SEXP iterSEXP, SEXP burnSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type Xinit(XinitSEXP);
    Rcpp::traits::input_parameter< const int& >::type F_Lor(F_LorSEXP);
    Rcpp::traits::input_parameter< const int& >::type K_Lor(K_LorSEXP);
    Rcpp::traits::input_parameter< const double& >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< const int& >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< const int& >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(Lorenz04M2SimCpp(Xinit, F_Lor, K_Lor, dt, M, iter, burn, order));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_VEnKF_DeltaLorenz04M2Cpp", (DL_FUNC) &_VEnKF_DeltaLorenz04M2Cpp, 6},
    {"_VEnKF_Lorenz04M2SimCpp", (DL_FUNC) &_VEnKF_Lorenz04M2SimCpp, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_VEnKF(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
